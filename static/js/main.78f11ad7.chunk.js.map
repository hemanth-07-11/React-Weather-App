{"version":3,"sources":["components/SearchForm.js","components/input-hooks.js","components/WeatherIcon.js","components/CurrentWeather.js","components/WeatherDetails.js","components/WeatherForecast.js","App.js","components/useFetch.js","index.js"],"names":["SearchForm","changeCity","f","geoKey","initialValue","useState","value","setValue","onChange","e","target","useInput","input","message","setMessage","a","preventDefault","getCityLocation","location","name","console","log","fetch","response","json","result","results","geometry","geo","className","onSubmit","type","placeholder","WeatherIcon","iconName","size","style","icon","CurrentWeather","city","data","temp","weather","dt","main","date","Date","time","getHours","getMinutes","class","WeatherDetails","hide","rain","parseInt","pop","day","wind_speed","humidity","pressure","wind_deg","uvi","onClick","WeatherForecast","useReducer","showDetails","setShowDetails","dayData","setDay","renderDay","dayForecast","i","dayName","toString","split","maxTemp","max","minTemp","min","rainChance","toggle","map","CSSTransition","in","timeout","classNames","unmountOnExit","App","lat","lng","setCity","uri","setData","error","setError","loading","setLoading","useEffect","then","catch","useFetch","JSON","stringify","current","daily","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78f11ad7.chunk.js","sourcesContent":["import { useInput } from './input-hooks';\nimport { BiSearch } from 'react-icons/bi';\nimport { useState } from 'react';\n\nexport default function SearchForm({ changeCity = f => f}) {\n\n  const geoKey = 'fc95fee6abf2436a8a5d11fd9767db0d'; \n  const [input, setInput] = useInput('');\n  const [message, setMessage] = useState('');\n\n  async function handleSubmit(e) {\n       \n    e.preventDefault();\n    const location = await getCityLocation();\n\n    if(location){\n      changeCity(\n        {\n          name: input.value,\n          ...location\n        }\n      );\n      setMessage('');\n    }else{\n      setMessage('Invalid city');\n      console.log(\"invalid city\");\n    }\n  }\n\n  async function getCityLocation() {\n\n    const response = await fetch(\n      `https://api.opencagedata.com/geocode/v1/json?q=${input.value}&key=${geoKey}`\n    );\n    const result = await response.json();\n    \n    if(result.results[0]){ \n      const geo = await result.results[0].geometry;\n      return geo;\n    }\n    return null;\n  }\n\n  return (\n    <div className=\"pt-4\">\n      <form className=\"search-form\" onSubmit={handleSubmit}>\n        <input \n          {...input}\n          type='text' \n          placeholder='City' \n        />\n        <button type='submit'><BiSearch /></button>\n      </form>\n      <span className='text-warning'>{message}</span>\n    </div>\n  );\n  \n}\n","import {useState} from 'react';\n\nexport const useInput = initialValue => {\n    const [value, setValue] = useState(initialValue);\n    return [\n        { value, onChange: e => setValue(e.target.value)},\n        () => setValue(initialValue)\n    ];\n}\n\n","export default function WeatherIcon({iconName, size=1, style}){\n\n    const icon = `owi owi-${iconName} owi-${size}x `;\n    return (\n        <i className={icon} style={style}/>\n    );\n}","import WeatherIcon from './WeatherIcon';\n\nexport default function CurrentWeather( {city, data} ) {\n\n    const { temp, weather, dt} = data;\n    const {icon, main} = weather[0];\n\n    const date = new Date(dt * 1000);\n    const time = date.getHours() + \":\" + date.getMinutes();\n\n    return (\n        <div className='glass-container col-sm-8'>            \n            <div className=\"current-weather\">\n                <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                        <h5 className=\"font-weight-bold\">{city} Weather</h5>\n                        <span class=\"time\">As of {time}</span>\n                        <div className=\"row align-items-center\">\n                            <div className=\"col-8\">\n                                <h1 class=\"font-weight-bold\">{temp}Â°C</h1>\n                            </div>\n                            <div className=\"col-4\">\n                                <WeatherIcon iconName={icon} size={5}/>\n                            </div>\n                        </div>\n                        <p class=\"font-weight-bold\">{main}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import WeatherIcon from './WeatherIcon';\nimport { WiRaindrop } from 'react-icons/wi';\nimport { BiWind, BiUpArrowAlt, BiSun } from 'react-icons/bi';\nimport { BsDropletHalf, BsArrowsCollapse } from 'react-icons/bs';\nimport { FiNavigation2 } from 'react-icons/fi';\n\nexport default function WeatherDetails ({data, hide = f => f}){\n    \n    if(!data)\n        return null;\n    \n    const {icon,} = data.weather[0];\n    const rain = parseInt(data.pop*100)\n    \n    return (\n        <div className=\"weather-detail glass-container\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-\">\n                \n                    <p><span className=\"font-weight-bold\"> Selected </span>| Day</p>\n                    <div className=\"row align-items-center\">\n                        <div className=\"col-auto pl-0 pr-3\">\n                            <h1 className=\"font-weight-bold\">{data.temp.day}Â°</h1>\n                        </div>\n                        <div className=\"col-auto p-0\">\n                            <WeatherIcon iconName={icon} size={5}/>\n                        </div>\n                        <div className=\"col-auto pl-3\">\n                            <p><WiRaindrop className=\"icon\" size={25}/>{rain}%</p>\n                            <p className=\"pl-1\"><BiWind size={25}/> {data.wind_speed}</p>\n                        </div>\n                    </div>\n                    \n                    <div className=\"table-responsive mt-3 mb-3\">\n                        <table class=\"table\">\n                            <tbody>\n                                <tr>\n                                    <td><BsDropletHalf /> Humidity</td>\n                                    <td>{data.humidity}%</td>\n                                </tr>\n                                <tr>\n                                    <td><BsArrowsCollapse /> Pressure</td>\n                                    <td>{data.pressure} mb</td>\n                                </tr>\n                                <tr>\n                                    <td><BiWind /> Wind</td>\n                                    <td>\n                                        <FiNavigation2 style={{\"transform\": `rotate(${data.wind_deg}deg)`}}/> \n                                        {data.wind_speed} km/h\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td><BiSun /> UV Index</td>\n                                    <td>{data.uvi}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <div className='mb-3 d-flex justify-content-center align-items-center'>\n                        <button className=\"btn\" onClick={hide}>\n                            <BiUpArrowAlt size={25}/>\n                        </button>\n                    </div>\n                </div>                    \n            </div>\n        </div>\n    )\n}","import WeatherIcon from './WeatherIcon';\nimport WeatherDetails from './WeatherDetails';\nimport { useReducer, useState } from 'react';\nimport { WiRaindrop } from 'react-icons/wi'\nimport { CSSTransition } from 'react-transition-group';\nimport '../animation.css';\n\n\nexport default function WeatherForecast( {data} ){    \n    \n    const [showDetails, setShowDetails] = useReducer(showDetails => !showDetails, false);\n    const [dayData, setDay] = useState();\n    const toggle = (dayData) => {\n\n        setDay(dayData);\n        if(!showDetails)\n            setShowDetails();\n    }\n\n    const renderDay = (dayForecast, i) => {\n        \n        const icon = dayForecast.weather[0].icon;\n        const date = new Date(dayForecast.dt * 1000);\n        const dayName = date.toString().split(' ')[0];\n        const maxTemp = dayForecast.temp.max;\n        const minTemp = dayForecast.temp.min;\n        const rainChance = dayForecast.pop ? parseInt(dayForecast.pop * 100) : 0;\n\n        return (\n            <div key={i} className=\"forecast col p-2 text-center\" onClick={() => toggle(dayForecast)}>\n                <p className=\"day\">{dayName}</p>\n                <p className=\"max-temp m-0 font-weight-bold\">{maxTemp}Â°C</p>\n                <p className=\"min-temp font-weight-bold small\">{minTemp}Â°C</p>\n                <WeatherIcon iconName={icon} size={3}/>\n                <p className='rain'>\n                    <WiRaindrop />\n                    <span className=\"small\">{rainChance}%</span>\n                </p>\n            </div>\n        );\n    }\n\n    return(\n        <>\n        <div className=\"glass-container weather-forecast\">\n            <div className=\"row\">\n                <div className=\"col-sm-12\">  \n                    <div className=\" p-4\">                  \n                        <h5 className=\"font-weight-bold mb-4\">Daily Forecast</h5>\n                        <div className=\"row bg-panel\"> \n                            {data.map((day, i) => renderDay(day, i))}\n                        </div>\n                    </div>                    \n                </div>\n            </div>\n        </div>\n        <CSSTransition \n            in={showDetails} \n            timeout={500} \n            classNames=\"node\" \n            unmountOnExit\n        >\n            <WeatherDetails \n                data={dayData} \n                hide={setShowDetails}\n            />\n        </CSSTransition>\n        </>\n    )\n}","import { useFetch } from './components/useFetch';\nimport { useState } from 'react';\nimport SearchForm from './components/SearchForm';\nimport './App.css';\nimport CurrentWeather from './components/CurrentWeather';\nimport WeatherForecast from './components/WeatherForecast';\nimport 'open-weather-icons/dist/css/open-weather-icons.css';\n\nfunction App() {\n\n  const weatherKey = '46f0c4db101bf29eed000013457f3888';\n  const [city, setCity] = useState({name: 'Chennai', lat: 13.0827, lng: 80.2707});\n  const { loading, data, error } = useFetch(\n    `https://api.openweathermap.org/data/2.5/onecall?lat=${city.lat}&lon=${city.lng}&exclude=hourly,minutely&units=metric&appid=${weatherKey}`\n  );\n\n  const renderWeather = () => {\n    if(loading)\n      return <h1>Loading...</h1>\n    else if(error)\n      return (\n        <>\n        <h1>Error</h1>\n        <p>{JSON.stringify(error, 2, null)}</p>\n        </>\n      );\n    else{\n      return (\n        <>\n          <CurrentWeather city={city.name} data={data.current} />\n          <WeatherForecast data={data.daily.splice(3)}/>\n        </>\n      );      \n    }\n  }\n\n  return (\n    <div className='container-sm'>\n      <SearchForm changeCity={setCity}/>\n      {renderWeather()}\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\n\nexport function useFetch(uri) {\n    const [data, setData] = useState();\n    const [error, setError] = useState();\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        if (!uri) return;\n        fetch(uri)\n        .then(data => data.json())\n        .then(setData)\n        .then(() => setLoading(false))\n        .catch(setError);\n    }, [uri]);\n\n\n    return {\n        loading,\n        data,\n        error\n    };\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}